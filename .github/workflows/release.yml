name: Build & Release (tarium.exe + bat)

on:
  workflow_dispatch: {}

jobs:
  build-windows:
    runs-on: windows-latest
    outputs:
      exe-path: ${{ steps.package.outputs.exe-path }}
      bat-path: ${{ steps.package.outputs.bat-path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/index
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build release
        run: cargo build --release

      - name: Prepare release files
        id: package
        shell: cmd
        run: |
          mkdir release
          copy target\release\tarium.exe release\tarium.exe
          if exist OPEN-CMD.bat (
            copy OPEN-CMD.bat release\OPEN-CMD.bat
          ) else (
            echo @echo off>release\OPEN-CMD.bat
            echo pushd "%%~dp0">>release\OPEN-CMD.bat
            echo.>>release\OPEN-CMD.bat
            echo ================= SPT Mod Manager =================>>release\OPEN-CMD.bat
            echo Basic commands:>>release\OPEN-CMD.bat
            echo   tarium.exe list - list installed mods>>release\OPEN-CMD.bat
            echo ==================================================>>release\OPEN-CMD.bat
            echo.>>release\OPEN-CMD.bat
            echo cmd.exe /k>>release\OPEN-CMD.bat
            echo popd>>release\OPEN-CMD.bat
          )
          echo "exe-path=release\\tarium.exe" >> $GITHUB_OUTPUT
          echo "bat-path=release\\OPEN-CMD.bat" >> $GITHUB_OUTPUT

      - name: Stage artifact root
        run: |
          mkdir artifact-root
          copy release\tarium.exe artifact-root\tarium.exe
          copy release\OPEN-CMD.bat artifact-root\OPEN-CMD.bat

      - name: Upload build outputs to artifact store
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: artifact-root/**

  publish:
    needs: build-windows
    runs-on: ubuntu-latest
    steps:
      - name: Download packaged artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-release
          path: artifacts

      - name: List downloaded files
        run: |
          ls -la artifacts || true

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: manual-${{ github.run_id }}
          name: manual-${{ github.run_id }}
          body: Release created by manual workflow run ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload tarium.exe
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/tarium.exe
          asset_name: tarium-${{ github.run_id }}-windows-x86_64.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload OPEN-CMD.bat
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/OPEN-CMD.bat
          asset_name: open-spt-cmd-${{ github.run_id }}.bat
          asset_content_type: text/plain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
